{"version":3,"sources":["contexts/theme.js","components/Loading.js","components/Nav.js","index.js"],"names":["React","createContext","Consumer","Provider","ThemeConsumer","ThemeProvider","styles","content","fontSize","position","left","right","marginTop","textAlign","Loading","state","props","text","this","speed","interval","window","setInterval","setState","clearInterval","style","Component","defaultProps","activeStyle","color","Nav","theme","toggleTheme","className","exact","to","onClick","Popular","lazy","Battle","Results","App","value","Suspense","fallback","path","component","render","ReactDOM","document","getElementById"],"mappings":"iHAAA,+E,EAAA,OAE+BA,EAAMC,gBAA7BC,E,EAAAA,SAAUC,E,EAAAA,SAELC,EAAgBF,EAChBG,EAAgBF,G,6HCFvBG,EAAS,CACXC,QAAS,CACLC,SAAU,OACVC,SAAU,WACVC,KAAM,IACNC,MAAO,IACPC,UAAW,OACXC,UAAW,WAIEC,E,2MACjBC,MAAQ,CACJR,QAAS,EAAKS,MAAMC,M,mFAGF,IAAD,SACOC,KAAKF,MAArBG,EADS,EACTA,MAAOF,EADE,EACFA,KAEfC,KAAKE,SAAWC,OAAOC,aAAY,WAC/B,EAAKP,MAAMR,UAAYU,EAAO,MACxB,EAAKM,SAAS,CAAEhB,QAASU,IACzB,EAAKM,UAAS,kBAAkB,CAAEhB,QAApB,EAAGA,QAAoC,UAC5DY,K,6CAIHE,OAAOG,cAAcN,KAAKE,Y,+BAI1B,OACI,uBAAGK,MAAOnB,EAAOC,SAAUW,KAAKH,MAAMR,a,GArBbP,IAAM0B,WA+B3CZ,EAAQa,aAAe,CACnBV,KAAM,UACNE,MAAO,M,mMC3CLS,EAAc,CAChBC,MAAO,oBAGI,SAASC,IACpB,OACI,kBAAC,IAAD,MACK,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAV,OACG,yBAAKC,UAAU,qBACX,wBAAIA,UAAU,WACV,4BACI,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,IAAIP,YAAaA,EAAaK,UAAU,YAA1D,YAEJ,4BACI,kBAAC,IAAD,CAASE,GAAG,UAAUP,YAAaA,EAAaK,UAAU,YAA1D,YAGR,4BACIR,MAAO,CAACjB,SAAU,IAClByB,UAAU,YACVG,QAASJ,GAEE,UAAVD,EAAoB,eAAO,oB,2DClBpD,IAAMM,EAAUrC,IAAMsC,MAAK,kBAAM,sDAC3BC,EAASvC,IAAMsC,MAAK,kBAAM,sDAC1BE,EAAUxC,IAAMsC,MAAK,kBAAM,sDAEZG,E,2MACjB1B,MAAQ,CACJgB,MAAO,QACPC,YAAa,WACT,EAAKT,UAAS,kBAAgB,CAC1BQ,MAAiB,UADP,EAAGA,MACc,OAAS,c,wEAM5C,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAeW,MAAOxB,KAAKH,OACvB,yBAAKkB,UAAWf,KAAKH,MAAMgB,OACvB,yBAAKE,UAAU,aACf,kBAACH,EAAD,MAEA,kBAAC,IAAMa,SAAP,CAAgBC,SAAU,kBAAC9B,EAAA,EAAD,OACtB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOoB,OAAK,EAACW,KAAK,IAAIC,UAAWT,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACW,KAAK,UAAUC,UAAWP,IACvC,kBAAC,IAAD,CAAOM,KAAK,kBAAkBC,UAAWN,IACzC,kBAAC,IAAD,CAAOO,OAAQ,kBAAM,gD,GAvBpB/C,IAAM0B,WAkCvCsB,IAASD,OAAO,kBAAC,EAAD,MAASE,SAASC,eAAe,W","file":"static/js/main.87028c62.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst { Consumer, Provider } = React.createContext()\r\n\r\nexport const ThemeConsumer = Consumer\r\nexport const ThemeProvider = Provider","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = {\r\n    content: {\r\n        fontSize: '35px',\r\n        position: 'absolute',\r\n        left: '0',\r\n        right: '0',\r\n        marginTop: '20px',\r\n        textAlign: 'center'\r\n    }\r\n}\r\n\r\nexport default class Loading extends React.Component {\r\n    state = {\r\n        content: this.props.text\r\n    }\r\n\r\n    componentDidMount () {\r\n        const { speed, text } = this.props\r\n\r\n        this.interval = window.setInterval(() => {\r\n            this.state.content === text + '...'\r\n                ? this.setState({ content: text })\r\n                : this.setState(({ content }) => ({ content: content + '.' }))\r\n        }, speed)\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        window.clearInterval(this.interval)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <p style={styles.content}>{this.state.content}</p>\r\n        )\r\n    }\r\n}\r\n\r\nLoading.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    speed: PropTypes.number.isRequired\r\n}\r\n\r\nLoading.defaultProps = {\r\n    text: 'Loading',\r\n    speed: 300\r\n}","import React from 'react'\r\nimport { ThemeConsumer } from '../contexts/theme'\r\nimport { NavLink } from 'react-router-dom' \r\n\r\nconst activeStyle = {\r\n    color: 'rgb(187, 46, 31)'\r\n}\r\n\r\nexport default function Nav () {\r\n    return (\r\n        <ThemeConsumer>\r\n            {({ theme, toggleTheme }) => (\r\n                <nav className='row space-between'>\r\n                    <ul className='row nav'>\r\n                        <li>\r\n                            <NavLink exact to='/' activeStyle={activeStyle} className='nav-link'>Popular</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to='/battle' activeStyle={activeStyle} className='nav-link'>Battle</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <button\r\n                        style={{fontSize: 30}}\r\n                        className='btn-clear'\r\n                        onClick={toggleTheme}\r\n                    >\r\n                        {theme === 'light' ? 'ðŸ”¦' : 'ðŸ’¡'}\r\n                    </button>\r\n                </nav>\r\n            )}\r\n        </ThemeConsumer>\r\n    )\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { ThemeProvider } from './contexts/theme'\nimport Nav from './components/Nav'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Loading from './components/Loading'\n\nconst Popular = React.lazy(() => import('./components/Popular'))\nconst Battle = React.lazy(() => import('./components/Battle'))\nconst Results = React.lazy(() => import('./components/Results'))\n\nexport default class App extends React.Component {\n    state = {\n        theme: 'light',\n        toggleTheme: () => {\n            this.setState(({ theme }) => ({\n                theme: theme === 'light' ? 'dark' : 'light'\n            }))\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <ThemeProvider value={this.state}>\n                    <div className={this.state.theme}>\n                        <div className='container'>\n                        <Nav />\n\n                        <React.Suspense fallback={<Loading />}>\n                            <Switch>\n                                <Route exact path='/' component={Popular} />\n                                <Route exact path='/battle' component={Battle} />\n                                <Route path='/battle/results' component={Results} />\n                                <Route render={() => <h1>404</h1>} />\n                            </Switch>\n                        </React.Suspense>\n                        </div>\n                    </div>\n                </ThemeProvider>\n            </Router>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}