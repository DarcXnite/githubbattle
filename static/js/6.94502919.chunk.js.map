{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/Battle.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Instructions","theme","className","color","size","PlayerInput","state","username","activeOption","filteredOptions","showOptions","handleSubmit","e","preventDefault","props","onSubmit","handleChange","setState","target","this","htmlFor","label","type","id","placeholder","autoComplete","onChange","disabled","React","Component","PlayerPreview","onReset","src","alt","href","onClick","Battle","playerOne","playerTwo","player","handleReset","Fragment","to","pathname","search"],"mappings":"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","file":"static/js/6.94502919.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from 'react'\r\nimport { FaUserFriends, FaFighterJet, FaTrophy, FaTimesCircle } from 'react-icons/fa'\r\nimport PropTypes from 'prop-types'\r\nimport { ThemeConsumer } from '../contexts/theme'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Instructions () {\r\n    return (\r\n        <ThemeConsumer>\r\n            {({ theme }) => (\r\n                <div className='instructions-container'>\r\n                    <h1 className='center-text header-lg'>\r\n                        Instructions\r\n                    </h1>\r\n                    <ol className='container-sm grid center-text battle-instructions'>\r\n                        <li>\r\n                            <h3 className='header-sm'>\r\n                                Enter two Github users\r\n                            </h3>\r\n                            <FaUserFriends className={`bg-${theme}`} color='rgb(255, 191, 116)' size={140} />\r\n                        </li>\r\n                        <li>\r\n                            <h3 className='header-sm'>\r\n                                Battle\r\n                            </h3>\r\n                            <FaFighterJet className={`bg-${theme}`} color='#727272' size={140} />\r\n                        </li>\r\n                        <li>\r\n                            <h3 className='header-sm'>\r\n                                See the winners\r\n                            </h3>\r\n                            <FaTrophy className={`bg-${theme}`} color='rgb(255, 215, 0)' size={140} />\r\n                        </li>\r\n                    </ol>\r\n                </div> \r\n            )}\r\n        </ThemeConsumer>\r\n    )\r\n}\r\n\r\nclass PlayerInput extends React.Component {\r\n    state = {\r\n        username: '',\r\n        activeOption: 0,\r\n        filteredOptions: [],\r\n        showOptions: false\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        this.props.onSubmit(this.state.username)\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { activeOption, filteredOptions, showOptions, username } = this.state\r\n        return (\r\n            <ThemeConsumer>\r\n                {({ theme }) => (\r\n                    <form \r\n                        className='column player'\r\n                        onSubmit={this.handleSubmit}\r\n                    >\r\n                        <label htmlFor='username' className='player-label'>\r\n                            {this.props.label}\r\n                        </label>\r\n                        <div className='row player-inputs'>\r\n                            <input \r\n                                type='text'\r\n                                id='username'\r\n                                className={`input-${theme}`}\r\n                                placeholder='GitHub username'\r\n                                autoComplete='off'\r\n                                value={username}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <button\r\n                                className={`btn ${theme === 'dark' ? 'light-btn' : 'dark-btn'}`}\r\n                                type='submit'\r\n                                disabled={!this.state.username}\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n            </ThemeConsumer>           \r\n        )\r\n    }\r\n}\r\n\r\nPlayerInput.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    label: PropTypes.string.isRequired\r\n}\r\n\r\nfunction PlayerPreview ({ username, onReset, label }) {\r\n    return (\r\n        <ThemeConsumer>\r\n            {({ theme }) => (\r\n                <div className='column player'>\r\n                    <h3 className='player-label'>{label}</h3>\r\n                    <div className={`row bg-${theme}`}>\r\n                    <div className='player-info'>\r\n                        <img\r\n                        className='avatar-small'\r\n                        src={`https://github.com/${username}.png?size=200`}\r\n                        alt={`Avatar for ${username}`}\r\n                        />\r\n                        <a\r\n                        href={`https://github.com/${username}`}\r\n                        className='link'>\r\n                            {username}\r\n                        </a>\r\n                    </div>\r\n                    <button className='btn-clear flex-center' onClick={onReset}>\r\n                        <FaTimesCircle color='rgb(194, 57, 42)' size={26} />\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </ThemeConsumer>\r\n      \r\n    )\r\n  }\r\n\r\nPlayerPreview.propTypes = {\r\n    username: PropTypes.string.isRequired,\r\n    onReset: PropTypes.func.isRequired,\r\n    label: PropTypes.string.isRequired\r\n}\r\n\r\nexport default class Battle extends React.Component {\r\n    state = {\r\n        playerOne: null,\r\n        playerTwo: null,\r\n    }\r\n\r\n    handleSubmit = (id, player) => {\r\n        this.setState({\r\n            [id]: player\r\n        })\r\n    }\r\n\r\n    handleReset = (id) => {\r\n        this.setState({\r\n            [id]: null\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { playerOne, playerTwo } = this.state\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Instructions />\r\n                <div className='players-container'>\r\n                    <h1 className='center-text header-lg'>Players</h1>\r\n                    <div className='row space-around'>\r\n                        {playerOne === null ? \r\n                            <PlayerInput \r\n                                label='Player One'\r\n                                onSubmit={player => this.handleSubmit('playerOne', player)}\r\n                            />\r\n                            : <PlayerPreview\r\n                                username={playerOne}\r\n                                label='Player One'\r\n                                onReset={() => this.handleReset('playerOne')}\r\n                             />\r\n                        }\r\n\r\n                        {playerTwo === null ?\r\n                            <PlayerInput \r\n                                label='Player Two'\r\n                                onSubmit={player => this.handleSubmit('playerTwo', player)}\r\n                            />\r\n                            : <PlayerPreview\r\n                                username={playerTwo}\r\n                                label='Player Two'\r\n                                onReset={() => this.handleReset('playerTwo')}\r\n                             />\r\n                        }\r\n                    </div>\r\n                    {playerOne && playerTwo && (\r\n                        <Link \r\n                            className='btn dark-btn btn-space' \r\n                            to={{\r\n                                pathname: '/battle/results',\r\n                                search: `?playerOne=${playerOne}&playerTwo=${playerTwo}`\r\n                            }}\r\n                        >\r\n                            Battle!\r\n                        </Link>\r\n                    )}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}