{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/Card.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","utils/api.js","components/Hover.js","components/ToolTip.js","components/Popular.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Card","header","subheader","avatar","href","name","children","theme","className","src","alt","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","TypeError","params","getErrorMsg","message","username","getRepos","fetch","then","res","json","repos","Error","calculateScore","followers","reduce","count","stargazers_count","getStarCount","getUserData","player","Promise","all","profile","score","battle","players","results","sort","a","b","sortPlayers","fetchPopularRepos","language","endpoint","window","encodeURI","data","items","Hover","state","hovering","mouseOver","setState","mouseOut","this","onMouseOver","onMouseOut","props","React","Component","styles","container","position","display","tooltip","boxSizing","width","bottom","left","marginLeft","borderRadius","backgroundColor","padding","marginBottom","color","textAlign","fontSize","ToolTip","text","style","LanguagesNav","selected","onUpdateLang","map","onClick","ReposGrid","repo","index","owner","html_url","forks","open_issues","login","avatar_url","size","toLocaleString","Popular","selectedLanguage","error","updateLang","catch","console","warn","isLoading","Fragment"],"mappings":"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","file":"static/js/5.5fa86db5.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { ThemeConsumer } from '../contexts/theme'\r\n\r\nexport default function Card ({ header, subheader, avatar, href, name, children }) {\r\n    return (\r\n        <ThemeConsumer>\r\n            {({ theme }) => (\r\n                <div className={`card bg-${theme}`}>\r\n                    <h4 className='header-lg center-text'>\r\n                        {header}\r\n                    </h4>\r\n                    <img \r\n                        className='avatar' \r\n                        src={avatar}\r\n                        alt={`Avatar for ${name}`}\r\n                    />\r\n                    {subheader && (\r\n                        <h4 className='center-text'>\r\n                            {subheader}\r\n                        </h4>\r\n                    )}\r\n                    <h2 className='center-text'>\r\n                        <a className='link' href={href}>\r\n                            {name}\r\n                        </a>\r\n                    </h2>\r\n        \r\n                    {children}\r\n                </div>\r\n            )}\r\n        </ThemeConsumer>\r\n    )\r\n}\r\n\r\nCard.propTypes = {\r\n    header: PropTypes.string.isRequired,\r\n    subheader: PropTypes.string,\r\n    avatar: PropTypes.string.isRequired,\r\n    href: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","const id = \"YOUR_CLIENT_ID\"\r\nconst sec = \"YOUR_SECRET_ID\"\r\nconst params = `?client_id=${id}&client_secret=${sec}`\r\n\r\nfunction getErrorMsg (message, username) {\r\n  if (message === 'Not Found') {\r\n    return `${username} doesn't exist`\r\n  }\r\n\r\n  return message\r\n}\r\n\r\nfunction getProfile (username) {\r\n  return fetch(`https://api.github.com/users/${username}${params}`)\r\n    .then((res) => res.json())\r\n    .then((profile) => {\r\n      if (profile.message) {\r\n        throw new Error(getErrorMsg(profile.message, username))\r\n      }\r\n\r\n      return profile\r\n    })\r\n}\r\n\r\nfunction getRepos (username) {\r\n  return fetch(`https://api.github.com/users/${username}/repos${params}&per_page=100`)\r\n    .then(res => res.json())\r\n    .then(repos => {\r\n      if (repos.message) {\r\n        throw new Error(getErrorMsg(repos.message, username))\r\n      }\r\n      \r\n      return repos\r\n    })\r\n}\r\n\r\nfunction getStarCount (repos) {\r\n  return repos.reduce((count, { stargazers_count }) => count + stargazers_count , 0)\r\n}\r\n\r\nfunction calculateScore (followers, repos) {\r\n  return (followers * 3) + getStarCount(repos)\r\n}\r\n\r\nfunction getUserData (player) {\r\n  return Promise.all([\r\n    getProfile(player),\r\n    getRepos(player)\r\n  ]).then(([ profile, repos ]) =>({\r\n    profile,\r\n    score: calculateScore(profile.followers, repos)\r\n  }))\r\n}\r\n\r\nfunction sortPlayers (players) {\r\n  return players.sort((a,b) => b.score - a.score)\r\n}\r\n\r\nexport function battle(players) {\r\n  return Promise.all([\r\n    getUserData(players[0]),\r\n    getUserData(players[1])\r\n  ]).then((results) => sortPlayers(results))\r\n}\r\n\r\nexport function fetchPopularRepos (language) {\r\n    const endpoint = window.encodeURI(`https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`)\r\n  \r\n    return fetch(endpoint)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (!data.items) {\r\n          throw new Error(data.message)\r\n        }\r\n  \r\n        return data.items\r\n      })\r\n  }","import React from 'react'\r\n\r\nexport default class Hover extends React.Component {\r\n    state = {\r\n        hovering: false\r\n    }\r\n\r\n    mouseOver = () => {\r\n        this.setState({\r\n            hovering: true\r\n        })\r\n    }\r\n\r\n    mouseOut = () => {\r\n        this.setState({\r\n            hovering: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { hovering } = this.state\r\n\r\n        return (\r\n            <div\r\n                onMouseOver={this.mouseOver}\r\n                onMouseOut={this.mouseOut}\r\n            >\r\n                {this.props.children(hovering)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Hover from './Hover'\r\n\r\nconst styles = {\r\n    container: {\r\n      position: 'relative',\r\n      display: 'flex'\r\n    },\r\n    tooltip: {\r\n      boxSizing: 'border-box',\r\n      position: 'absolute',\r\n      width: '160px',\r\n      bottom: '100%',\r\n      left: '50%',\r\n      marginLeft: '-80px',\r\n      borderRadius: '3px',\r\n      backgroundColor: 'hsla(0, 0%, 20%, 0.9)',\r\n      padding: '7px',\r\n      marginBottom: '5px',\r\n      color: '#fff',\r\n      textAlign: 'center',\r\n      fontSize: '14px',\r\n    }\r\n  }\r\n\r\n  export default function ToolTip ({ text, children }) {\r\n    return (\r\n        <Hover>\r\n            {hovering => (\r\n                <div style={styles.container}>\r\n                    {hovering === true && <div style={styles.tooltip}>{text}</div>}\r\n                    {children}\r\n                </div>\r\n            )}\r\n        </Hover>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { fetchPopularRepos } from '../utils/api'\r\nimport { FaUser, FaStar, FaCodeBranch, FaExclamationTriangle } from 'react-icons/fa'\r\nimport Card from './Card'\r\nimport Loading from './Loading'\r\nimport ToolTip from './ToolTip'\r\n\r\nfunction LanguagesNav ({ selected, onUpdateLang }) {\r\n    const lang = ['All', 'Javasccript', 'Ruby', 'Java', 'CSS', 'Python']\r\n\r\n    return (\r\n        <ul className='flex-center'>\r\n            {lang.map(language => (\r\n                <li key={language}>\r\n                    <button \r\n                    className=\"btn-clear nav-link\"\r\n                    style={language === selected ? { color : 'red' } : null}\r\n                    onClick={() => onUpdateLang(language)}\r\n                    >\r\n                    {language}</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nLanguagesNav.propTypes = {\r\n    selected: PropTypes.string.isRequired,\r\n    onUpdateLang: PropTypes.func.isRequired\r\n}\r\n\r\nfunction ReposGrid ({ repos }) {\r\n    return (\r\n        <ul className='grid space-around'>\r\n            {repos.map((repo, index) => {\r\n                const { owner, html_url, stargazers_count, forks, open_issues } = repo\r\n                const { login, avatar_url } = owner\r\n\r\n                return (\r\n                    <li key={html_url}>\r\n                        <Card \r\n                            header={`#${index + 1}`}\r\n                            avatar={avatar_url}\r\n                            href={html_url}\r\n                            name={login}\r\n                        >\r\n                            <ul className='card-list'>\r\n                                <li>\r\n                                    <ToolTip text='GitHub Username'>\r\n                                        <FaUser color='rgb(255, 191, 116)' size={22} />\r\n                                        <a href={`https://github.com/${login}`}>\r\n                                            {login}\r\n                                        </a>\r\n                                    </ToolTip>\r\n                                </li>\r\n                                <li>\r\n                                    <FaStar color='rgb(255, 215, 0)' size={22} />\r\n                                    {stargazers_count.toLocaleString()} stars\r\n                                </li>\r\n                                <li>\r\n                                    <FaCodeBranch color='rgb(129, 195, 245)' size={22} />\r\n                                    {forks.toLocaleString()} forks\r\n                                </li>\r\n                                <li>\r\n                                    <FaExclamationTriangle color='rgb(241, 138, 147)' size={22} />\r\n                                    {open_issues.toLocaleString()} open\r\n                                </li>\r\n                            </ul>\r\n                        </Card>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nReposGrid.propTypes = {\r\n    repos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default class Popular extends React.Component {\r\n    state = {\r\n        selectedLanguage: 'All',\r\n        repos: {},\r\n        error: null,\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.updateLang(this.state.selectedLanguage)\r\n    }\r\n\r\n    updateLang = (selectedLanguage) => {\r\n        this.setState({ \r\n            selectedLanguage,\r\n            error: null,\r\n        })\r\n\r\n        if (!this.state.repos[selectedLanguage]) {\r\n            fetchPopularRepos(selectedLanguage)\r\n                .then((data) => {\r\n                    this.setState(({ repos }) => ({\r\n                        repos: {\r\n                            ...repos,\r\n                            [selectedLanguage]: data\r\n                        }\r\n                    }))\r\n                \r\n                })\r\n                .catch(() => {\r\n                    console.warn('Error Fetching Repos')\r\n\r\n                    this.setState({\r\n                        error: 'There was an error fetching repos'\r\n                })\r\n            })\r\n        }  \r\n    }\r\n\r\n    isLoading = () => {\r\n        const { selectedLanguage, repos, error } = this.state\r\n\r\n        return !repos[selectedLanguage] && error === null\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { selectedLanguage, repos, error } = this.state\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <LanguagesNav \r\n                    selected={selectedLanguage}\r\n                    onUpdateLang={this.updateLang}\r\n                />\r\n\r\n                {this.isLoading() && <Loading text='Fetching Repos' />}\r\n                {error && <p className='center-text error'>{error}</p>}\r\n                {repos[selectedLanguage] && <ReposGrid repos={repos[selectedLanguage]} />}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}